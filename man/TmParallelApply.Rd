% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TmParallelApply.R
\name{TmParallelApply}
\alias{TmParallelApply}
\title{An OS-independent parallel version of \code{lapply}}
\usage{
TmParallelApply(X, FUN, cpus = parallel::detectCores(), export = NULL)
}
\arguments{
\item{X}{A vector or list over which to apply \code{FUN}}

\item{FUN}{A function to apply over \code{X}}

\item{cpus}{Number of CPU cores to use, defaults to the value returned by 
\code{parallel::detectCores()}.}

\item{export}{A character vector of objects in the workspace to export when 
using a Windows machine. Defauts to \code{NULL}}
}
\value{
This function returns a \code{list} of length \code{length(X)}.
}
\description{
This function takes a vector or list and a function and applies in parallel.
}
\details{
This function is used to parallelize executions in textmineR. It is 
necessary because of differing capabilities between Windows and Unix.
Unix systems use \code{mclapply} from \code{package:parallel}. Windows 
systems use \code{parLapply} from \code{package:parallel}.
}
\examples{
\dontrun{
x <- 1:10000
f <- function(y) y * y + 12
result <- TmParallelApply(x, f)
}
}

